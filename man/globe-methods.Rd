% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{fly_to}
\alias{fly_to}
\alias{set_view}
\alias{set_clock}
\title{Methods to manipulate a globe widget}
\usage{
fly_to(
  globe,
  x = NULL,
  y = NULL,
  z = NULL,
  duration = NULL,
  data = getGlobeData(globe),
  ...
)

set_view(globe, x = NULL, y = NULL, z = NULL, data = getGlobeData(globe), ...)

set_clock(
  globe,
  start_time,
  stop_time,
  current_time,
  multiplier = 1,
  clock_step = c("SYSTEM_CLOCK_MULTIPLIER", "TICK_DEPENDENT", "SYSTEM_CLOCK"),
  clock_range = c("LOOP_STOP", "UNBOUNDED", "CLAMPED"),
  data = getGlobeData(globe),
  ...
)
}
\arguments{
\item{globe}{a globe widget created from \code{\link{cesium}()}}

\item{x}{the center longitude of the new view}

\item{y}{the center latitude of the new view}

\item{z}{the center height of the new view, in meters}

\item{duration}{duration for the flight, in seconds}

\item{data}{optional data argument to derive center location,
will only be used if x, y, and z are NULL. can be inherited
from the globe}

\item{...}{ignored}

\item{start_time}{start time of the clock, needs to be convertible to POSIXct}

\item{stop_time}{stop time of the clock, needs to be convertible to POSIXct}

\item{current_time}{end time of the clock, needs to be convertible to POSIXct}

\item{multiplier}{multiplier used to determine the step size when the clock ticks}

\item{clock_step}{sets the behavior how much time passes between ticks}

\item{clock_range}{sets the behavior if start_time or end_time is reached}
}
\description{
A number of methods to manipulate a globe widget
}
\section{Functions}{
\itemize{
\item \code{fly_to()}: Fly to a given location

\item \code{set_view()}: Set the view to a given location

\item \code{set_clock()}: Set the clock of the globe widget

}}
